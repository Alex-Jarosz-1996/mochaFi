from marshmallow_sqlalchemy import SQLAlchemySchema, auto_field
from models.stock_model import StockModel

class StockSchema(SQLAlchemySchema):
    class Meta:
        model = StockModel
        load_instance = True  # Allows deserialization to model instances

    id = auto_field()
    code = auto_field()
    country = auto_field()
    price = auto_field()
    marketCap = auto_field()
    numSharesAvail = auto_field()
    yearlyLowPrice = auto_field()
    yearlyHighPrice = auto_field()
    fiftyDayMA = auto_field()
    twoHundredDayMA = auto_field()
    acquirersMultiple = auto_field()
    currentRatio = auto_field()
    enterpriseValue = auto_field()
    eps = auto_field()
    evToEBITDA = auto_field()
    evToRev = auto_field()
    peRatioTrail = auto_field()
    peRatioForward = auto_field()
    priceToSales = auto_field()
    priceToBook = auto_field()
    dividendYield = auto_field()
    dividendRate = auto_field()
    exDivDate = auto_field()
    payoutRatio = auto_field()
    bookValPerShare = auto_field()
    cash = auto_field()
    cashPerShare = auto_field()
    cashToMarketCap = auto_field()
    cashToDebt = auto_field()
    debt = auto_field()
    debtToMarketCap = auto_field()
    debtToEquityRatio = auto_field()
    returnOnAssets = auto_field()
    returnOnEquity = auto_field()
    ebitda = auto_field()
    ebitdaPerShare = auto_field()
    earningsGrowth = auto_field()
    grossProfit = auto_field()
    grossProfitPerShare = auto_field()
    netIncome = auto_field()
    netIncomePerShare = auto_field()
    operatingMargin = auto_field()
    profitMargin = auto_field()
    revenue = auto_field()
    revenueGrowth = auto_field()
    revenuePerShare = auto_field()
    fcf = auto_field()
    fcfToMarketCap = auto_field()
    fcfPerShare = auto_field()
    fcfToEV = auto_field()
    ocf = auto_field()
    ocfToRevenueRatio = auto_field()
    ocfToMarketCap = auto_field()
    ocfPerShare = auto_field()
    ocfToEV = auto_field()
